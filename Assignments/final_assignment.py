# -*- coding: utf-8 -*-
"""Final Assignment

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G3lDtgaTnNbVdpsZiN0SNWfXV9DGQTmO
"""

import pandas as pd

DataFrame = pd.read_csv('Crime.csv')

DataFrame.head()

DataFrame.shape

DataFrame.describe()

#now, to rename our columns.

DataFrame.rename(columns={'X1': 'total overall reported crime rate per 1 million residents',
                          'X2': 'reported violent crime rate per 100,000 residents',
                          'X3': 'annual police funding in $/ resident',
                          'X4': '% of people 25 years+ with 4 yrs. of high school',
                          'X5': '% pf 16 to 19 year-old not in high school and not high school graduates',
                          'X6': '% pf 18 to 24 year-olds in college',
                          'X7': '% of people 25+ years with at least 4 years of college'})

"""Next, we must look for NaN values in our data"""

DataFrame.isnull()

"""Let's make it a bit easier on the eye:"""

DataFrame.isnull().sum()

"""Now, to plot our graph!"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
DataFrame.plot(kind='line', figsize=(9,9))

DataFrame.plot(kind='hist', figsize=(9,9))

import numpy as np

x=DataFrame.loc[:, DataFrame.columns !='X1'].values

x

y=DataFrame.X1.values

y

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test=train_test_split(x,y, test_size=0.25)

from sklearn.linear_model import LinearRegression
reg=LinearRegression()
reg.fit(x_train,y_train)

y_predict=reg.predict(x_test)

Predict_DataFrame = pd.DataFrame({'Actual': y_test, 'Predicted': y_predict})
Predict_DataFrame

from sklearn import metrics

print('Mean Squared Error:', metrics.mean_squared_error(y_test,y_predict))

Predict_DataFrame.plot(kind='bar', figsize=(8,8))

"""Pretty cool assignment!"""